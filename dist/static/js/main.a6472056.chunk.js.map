{"version":3,"sources":["components/layout/Signedinlinks.js","store/actions/authAction.js","components/layout/Signedoutlinks.js","components/layout/Navbar.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","Signedoutlinks","state","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createproject","history","push","authorId","add","Date","createProject","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initstate","AuthReducer","action","console","log","message","ProjectReducer","rootReducer","combineReducers","authReducer","projectReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbconfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a6472056.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authAction'\r\n\r\n\r\nconst Signedinlinks=(props)=> {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(Signedinlinks);","export const signIn = (credentials) => {\r\n\r\n    return (dispatch,getState,{getFirebase})=> {\r\n\r\n        const firebase=getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type:'LOGIN_ERROR',err});\r\n        });\r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch,getState,{getFirebase}) => {\r\n        const firebase=getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n\r\n    return (dispatch,getState,{ getFirebase, getFirestore}) => {\r\n        const firebase=getFirebase();\r\n        const firestore=getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR',err })\r\n        })\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Signedoutlinks=()=> {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>            \r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default Signedoutlinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Signedinlinks from './Signedinlinks'\r\nimport Signedoutlinks from './Signedoutlinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar=(props)=> {\r\n    const { auth, profile} = props;\r\n    \r\n    const links=auth.uid ? <Signedinlinks  profile={profile}/> : <Signedoutlinks /> \r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps= (state) => {\r\n    return {\r\n        auth:state.firebase.auth,\r\n        profile:state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n\r\n    return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>Posted by {project.authorFirstName+ project.authorLastName}</p>\r\n            <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectSummary;","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n          {projects && projects.map(project=>{\r\n              return (\r\n                  <Link to={'/project/' + project.id} key={project.id}>\r\n                    <ProjectSummary project={project}  />\r\n                  </Link>\r\n          )\r\n          })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectList;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../project/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' ,orderBy:['createdAt','desc'] },\r\n    { collection: 'notifications', limit: 3,orderBy:['time','desc']}\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n \r\n\r\nconst  ProjectDetails = (props) =>  {\r\n    const {project, auth}=props;\r\n\r\n    if(!auth.uid) return < Redirect to='/signin'/>\r\n    if(project){\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div> Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n        }else{ \r\n            return (\r\n            <div className=\"container center\">\r\n                <p>Loading Project...</p>\r\n            </div>\r\n            )\r\n        }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id=ownProps.match.params.id;\r\n    const projects=state.firestore.data.projects;\r\n    const project=projects? projects[id] : null;\r\n\r\n    return {\r\n        project:project,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n    )(ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass SignIn extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',    \r\n\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {authError,auth}=this.props;\r\n\r\n        if(auth.uid) return < Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"container\"> \r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds)=> dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\r\n\r\n  ","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authAction'\r\n\r\nclass SignUp extends Component {\r\n    state={\r\n        email:'',\r\n        password:'', \r\n        firstName:'',\r\n        lastName:''   \r\n\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { auth ,authError}=this.props;\r\n\r\n        if(auth.uid) return < Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"container\"> \r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\" onSubmit={this.handleSubmit}>Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps= (state) => {\r\n    return {\r\n        auth:state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispathToProps)(SignUp);\r\n  ","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state={\r\n        title:'',\r\n        content:'',    \r\n\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.createproject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { auth }=this.props;\r\n\r\n        if(!auth.uid) return < Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"container\"> \r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (state) => {\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createproject: (project) => dispatch(createProject(project))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);\r\n\r\n  ","export const createProject= (project) => {\r\n    return (dispatch, getState,{getFirebase,getFirestore}) => {\r\n        // Async call\r\n        const firestore=getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName :profile.lastName,\r\n            authorId:authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project:project})\r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR',err});\r\n        })\r\n\r\n        \r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject';\n\n\nfunction App() {\n  return ( \n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />  \n        <Switch>\n          <Route exact path=\"/\"  component={Dashboard} ></Route>\n          <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n          <Route path=\"/signin\" component={SignIn} ></Route>\n          <Route path=\"/signup\" component={SignUp} ></Route>\n          <Route path=\"/create\" component={CreateProject} ></Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initstate={\r\n    authError: null\r\n}\r\n\r\nconst AuthReducer = (state=initstate, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n        //console.log('login error');\r\n        return {\r\n            ...state,\r\n            authError: 'Login failed'\r\n        }\r\n    case 'LOGIN_SUCCESS':\r\n        console.log('login success')\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n    case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success')\r\n        return state;\r\n    case 'SIGNUP_SUCCESS':\r\n        console.log('signup success');\r\n        return {\r\n            ...state,\r\n            authError:null\r\n        }\r\n    case 'SIGNUP_ERROR':\r\n        console.log('signup error');\r\n        return {\r\n            ...state,\r\n            authError: action.err.message\r\n        }\r\n    default:\r\n        return state;\r\n    }    \r\n    \r\n}\r\n\r\nexport default AuthReducer;","const initstate={\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n      ]\r\n}\r\n\r\nconst ProjectReducer = (state=initstate, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n        console.log('created project',action.project);\r\n        return state;\r\n    case 'CREATE_PROJECT_ERR':\r\n        console.log('Create Project Error', action.err)\r\n        return state;\r\n    default:\r\n        return state;\r\n    }    \r\n    \r\n}\r\n\r\nexport default ProjectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore:firestoreReducer,\r\n  firebase:firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBiKIzFaEQfUNdY3_yHHSmN4g46AfdZGvk\",\r\n    authDomain: \"project-management-react-5bc2b.firebaseapp.com\",\r\n    databaseURL: \"https://project-management-react-5bc2b.firebaseio.com\",\r\n    projectId: \"project-management-react-5bc2b\",\r\n    storageBucket: \"project-management-react-5bc2b.appspot.com\",\r\n    messagingSenderId: \"499512953760\",\r\n    appId: \"1:499512953760:web:9332ba725d426c9fdc32c5\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true})\r\n\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware, compose} from 'redux'\nimport { Provider } from 'react-redux' \nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase,getFirebase } from 'react-redux-firebase'\nimport fbconfig from './config/fbConfig'\n\nconst store= createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n    reduxFirestore(fbconfig),\n    reactReduxFirebase(fbconfig, {useFirestoreForProfile:true, userProfile:'users',attachAuthIsReady: true})\n    \n  )   \n);\n\nstore.firebaseAuthIsReady.then(()=> {\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}